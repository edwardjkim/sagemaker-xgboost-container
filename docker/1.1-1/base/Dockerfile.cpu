ARG UBUNTU_VERSION=16.04

FROM ubuntu:${UBUNTU_VERSION}

ARG PYTHON_VERSION=3.7
ARG PYARROW_VERSION=0.16.0
ARG MLIO_VERSION=0.5
ARG XGBOOST_VERSION=1.1.0
ARG CUDA_DISTRO=ubuntu1604
ARG CUDA_VERSION=10.2.89-1

# Install python and other runtime dependencies
RUN apt-get update && \
    apt-get -y install --no-install-recommends \
        build-essential \
        curl \
        git \
        jq \
        libatlas-dev \
        nginx \
        openjdk-8-jdk-headless \
        wget \
        && \
    rm -rf /var/lib/apt/lists/*

# Install CUDA 10
RUN cd /tmp && \
    wget https://developer.download.nvidia.com/compute/cuda/repos/${CUDA_DISTRO}/x86_64/cuda-repo-${CUDA_DISTRO}_${CUDA_VERSION}_amd64.deb && \
    dpkg --install cuda-repo-${CUDA_DISTRO}_${CUDA_VERSION}_amd64.deb && \
    rm /tmp/cuda-repo-${CUDA_DISTRO}_${CUDA_VERSION}_amd64.deb

# Install mlio
RUN echo 'installing miniconda' && \
    curl -LO http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    bash Miniconda3-latest-Linux-x86_64.sh -bfp /miniconda3 && \
    rm Miniconda3-latest-Linux-x86_64.sh

ENV PATH=/miniconda3/bin:${PATH}

RUN conda install python=${PYTHON_VERSION} && \
    conda update -y conda && \
    conda install -c conda-forge pyarrow=${PYARROW_VERSION} && \
    conda install -c mlio -c conda-forge mlio-py=${MLIO_VERSION}

# Python wonâ€™t try to write .pyc or .pyo files on the import of source modules
# Force stdin, stdout and stderr to be totally unbuffered. Good for logging
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONIOENCODING='utf-8'

# Install latest version of XGBoost
RUN python3 -m pip install --no-cache -I xgboost==${XGBOOST_VERSION}
